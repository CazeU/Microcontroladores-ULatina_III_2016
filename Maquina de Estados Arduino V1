/* NOTAS IMPORTATES:
 *  Aun no se que tan necesarios sean los ciclos while, hacer pruebas con ellos y sin ellos
 */
 
//Incluyendo Librerias
#include <Servo.h>
#include <LiquidCrystal.h>
#include <Key.h>
#include <Keypad.h>


//Configurando Keypad
const byte numFilas = 4; //numero de filas en el teclado
const byte numColum = 4; //numero de columnas en el teclado
char teclaPresionada;
char keymap[numFilas][numColum]=  //Configurando el contenido del teclado
{
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

//codigo para conectar el teclado con los pines de Arduino
byte pinsFil[numFilas] = {A8,A9,A10,A11};
byte pinsCol[numColum] = {A12,A13,A14,A15};
Keypad teclado = Keypad(makeKeymap(keys), pinsFil, pinsCol, numFilas, numColum); 


//Configurando LCD
LiquidCrystal(14,15,16,17,18,19);


//Configurando Servo
Servo cerradura;
const int abierta = 90; //posicion del servo que abre la cerradura
const int cerrada = 0;  //posicion del servo que cierra la cerradura


//Definiendo pines de los sensores y actuadores
const int pir = A0; //sensor de movimiento
const int redSwitch = A1; //hace falta el sensor magnetico para puertas y ventanas
const int temp = A2; //sensor de temperatura
const int humo = A3; //sensor de humo 
const int buzzer1 = 11; //buzzer para las alarmas
const int buzzer2 = 12; //buzzer para el panel de control


//Otras Variables y Constantes 
unsigned long tiempoActual = 0;
unsigned long tiempoAnterior = 0;
const int tiempoEspera = 15000; //Tiempo de espera de 15 segundos
String password = "2580"; //Master pass por defecto.
String modNoche = "1234"; //Pass para activar modo nocturno
String tempPass = ""; //este va a guardar temporalmanete la pass que uno mete para compararla con las claves guardadas
boolean passVerificada = false;
boolean passCambiada = false;
boolean passGuardada = true;
int dobleCheck; //Contador para confirmar la nueva clave.
int i = 1; //Contador para arreglos
int estado = 0; //0=Desarmado, 1=Armado, 2=Noche, 3=cambioPass, 4=intruso, 5=Fuego
int humo = 0; 


void setup() {
 Serial.begin(9600);//para efectos de la raspi 0: desarme, 1:Fuego, 2:Intruso
 cerradura.attach(2);
 lcd.begin(16,2);
 
 pinMode(pir, INPUT);
 //pinMode(redSwitch,INPUT);
 pinMode(temp, INPUT); 
 
}

void loop() {
void loop() {
  int valorHumo = analogRead(sensorHumo);
  if(valorHumo > 350){
    humo = 1;
  }

  //Maquina de estados:

  switch(estado){
    case 0: //Desarme 
     humo = 0;
     estadoDesarme(); 
    break;

    case 1: //estado armado
     tiempoActual=millis();
     estadoArmado()  
     if(digitalRead(pir)|| digitalRead(redSwitch){
      tiempoAnterior = tiempoActual;
      if(tiempoActual - tiempoAnterior <= tiempoEspera){
       lcd.clear();
       lcd.setCursor(0,0);
       lcd.print("¡Alerta Intruso!");
       lcd.setCursor(0,1);
       lcd.print("PASS>>");
       sonidoEspera();
       estadoArmado();
      }
      else{
        estado = 4; //pasa a estado intruso 
      }
     }
     if(digitalRead(temp)||humo==1){
      estado = 5;
     }
    break;

    case 2: //Noche
     estadoNoche ();
     if(digitalRead(redSwitch)){
      estado = 4;
     }
     if(digitalRead(temp)||humo==1){
      estado = 5;
     }
    break;

    case 3: //cambio pass
    //estadoCambioPass();
    break;

    case 4:
     estadoIntruso();
    break;

    case 5:
     estadoFuego();
    break;
  }
}


//---Fuciones de salida para los estados---
//---Estado Desarme---
void estadoDesarme(){
  tiempoActual = millis ();
  desarme:
  serial.print(0);
  cerradura.write(abierta);
  tempPass = "";
  i=6;
  humo=0;
  while(!passVerificada){
   lcd.setCursor(0,0);
   lcd.print("SistemaDesarmado");
   lcd.setCursor(0,1);
   lcd.print("PASS>>");
   teclaPresionada = teclado.getKey(); //va a leer las teclas que se precionen
    if(teclaPresionada != NO_KEY){ //para que no guarde espacios en blanco mentras no se precionan teclas
     if(teclaPresionada==0 || teclaPresionada==1 || teclaPresionada==2 || teclaPresionada==3 || teclaPresionada==4 ||
        teclaPresionada==5 || teclaPresionada==6 || teclaPresionada==7 || teclaPresionada==8 || teclaPresionada==9 ||
        teclaPresionada==A || teclaPresionada==B || teclaPresionada==C)
     {
       //este ciclo tiene dos funciones "pedir" la password y poner * en lugar de los caracteres para mentener la password escondida 
       tempPass += teclaPresionada;
       lcd.setCursor(i,1);
       lcd.print("*");
       i++;
       tone(buzzer2,800,200);
     }
     else if(teclaPresionada == "#"){ //cancelar la opracion
      break;
     }
     else if(teclapresionada == "*"){//verificar la pasword
      if(password == tempPass){
       tiempoAnterior = tiempoActual;
       if(tiempoActual - tiempoAnterior <= tiempoEspera){
        lcd.clear();
        lcd.setCursor(0,0);
        lcd.print("Sistema Armado");
        lcd.setCursor(0,1);
        lcd.print("----------------");
        sonidoEspera();
       }
       else{
        estado = 1 // pasa a estado armado         
       }
      }
      else if(modNoche == tempPass){
       tiempoAnterior = tiempoActual;
       if(tiempoActual - tiempoAnterior <= tiempoEspera){
        lcd.clear();
        lcd.setCursor(0,0);
        lcd.print("Modo Nocturno");
        lcd.setCursor(0,1);
        lcd.print("----------------");
        sonidoEspera();
       }
       else{
        estado = 2  // pasa estado noche          
       }  
      }
      else if(temPass=="A"){
       estado = 3; //cambio de pass
      }
      else if(temPass=="B"){
       estado = 4; //pasa estado intruso
      }
      else if(temPass=="C"){
       estado = 5; //pasa estado incendio 
      }
      else{
       tempPass="";
       tone(buzzer2,500,500);
       goto desarme;          
      }
     }
    }
   }
}

//---Estado Noche---
void estadoNoche (){
  noche: //etiqueta para goto
  cerradura.write(cerrada);
  serial.print(0);
  tempPass = "";
  lcd.clear();
  i = 6;
  while(!passVerificada){
  lcd.setCursor(0,0);
  lcd.print("Modo Nocturno");
  lcd.setCursor(0,1);
  lcd.print("PASS>>");
  teclaPresionada = teclado.getKey(); //va a leer las teclas que se precionen
    if(teclaPresionada != NO_KEY){ //para que no guarde espacios en blanco mentras no se precionan teclas
     if(teclaPresionada==0 || teclaPresionada==1 || teclaPresionada==2 || teclaPresionada==3 || teclaPresionada==4 ||
         teclaPresionada==5 || teclaPresionada==6 || teclaPresionada==7 || teclaPresionada==8 || teclaPresionada==9 ||
         teclaPresionada==B || teclaPresionada==C)
      {
        //este ciclo tiene dos funciones "pedir" la password y poner * en lugar de los caracteres para mentener la password escondida 
       tempPass += teclaPresionada;
       lcd.setCursor(i,1);
       lcd.print("*");
       i++;
       tone(buzzer2,800,200);
      }
      else if(teclaPresionada == "#"){ //cancelar la opracion
        break;
      }
      else if(teclapresionada == "*"){//verificar la pasword
        if(password == tempPass){
          lcd.clear();
          lcd.setCursor(0,0);
          lcd.print("Sistema Desarmado");
          lcd.setCursor(0,1);
          lcd.print("----------------");
          tone(buzzer2,800,1000);
          //pasa a estado Desarme, falta esa bariable           
        }
        else{
          tempPass="";
          tone(buzzer2,500,500);
          goto noche;          
        }
      }
    }
  }
}


//---Estado Armado---
void estadoArmado (){
  armado: //etiqueta para goto
  cerradura.write(cerrada);
  serial.print(0);
  tempPass = "";
  lcd.clear();
  i = 6;
  while(!passVerificada){
  lcd.setCursor(0,0);
  lcd.print("Sistema Armado");
  lcd.setCursor(0,1);
  lcd.print("PASS>>");
  teclaPresionada = teclado.getKey(); //va a leer las teclas que se precionen
    if(teclaPresionada != NO_KEY){ //para que no guarde espacios en blanco mentras no se precionan teclas
      if(teclaPresionada==0 || teclaPresionada==1 || teclaPresionada==2 || teclaPresionada==3 || teclaPresionada==4 ||
         teclaPresionada==5 || teclaPresionada==6 || teclaPresionada==7 || teclaPresionada==8 || teclaPresionada==9 )
      {
        //este ciclo tiene dos funciones "pedir" la password y poner * en lugar de los caracteres para mentener la password escondida 
       tempPass += teclaPresionada;
       lcd.setCursor(i,1);
       lcd.print("*");
       i++;
       tone(buzzer2,800,200);
      }
      else if(teclaPresionada == "#"){ //cancelar la opracion
        break;
      }
      else if(teclapresionada == "*"){//verificar la pasword
        if(password == tempPass){
          lcd.clear();
          lcd.setCursor(0,0);
          lcd.print("Sistema Desarmado");
          lcd.setCursor(0,1);
          lcd.print("----------------");
          tone(buzzer2,800,1000);
          //pasa a estado Desarme, falta esa variable           
        }
        else{
          tempPass="";
          tone(buzzer2,500,500);
          goto armado;          
        }
      }
    }
  }
}


//---Estado Intruso---
void estadoIntruso(){
  intrusos: //etiqueta para goto
  cerradura.write(cerrada);
  sonidoIntruso()
  serial.print(2);
  tempPass = "";
  lcd.clear();
  i = 6;
  while(!passVerificada){
  lcd.setCursor(0,0);
  lcd.print("¡Alerta Intruso!");
  lcd.setCursor(0,1);
  lcd.print("PASS>>");
  teclaPresionada = teclado.getKey(); //va a leer las teclas que se precionen
    if(teclaPresionada != NO_KEY){ //para que no guarde espacios en blanco mentras no se precionan teclas
      if(teclaPresionada==0 || teclaPresionada==1 || teclaPresionada==2 || teclaPresionada==3 || teclaPresionada==4 ||
         teclaPresionada==5 || teclaPresionada==6 || teclaPresionada==7 || teclaPresionada==8 || teclaPresionada==9 )
      {
        //este ciclo tiene dos funciones "pedir" la password y poner * en lugar de los caracteres para mentener la password escondida 
       tempPass += teclaPresionada;
       lcd.setCursor(i,1);
       lcd.print("*");
       i++;
       tone(buzzer2,800,200);
      }
      else if(teclaPresionada == "#"){ //cancelar la operacion
        break;
      }
      else if(teclapresionada == "*"){//verificar la password
        if(password == tempPass){
          lcd.clear();
          lcd.setCursor(0,0);
          lcd.print("Sistema Desarmado");
          lcd.setCursor(0,1);
          lcd.print("----------------");
          tone(buzzer2,800,1000);
          //pasa a estado Desarme, falta esa variable           
        }
        else{
          tempPass="";
          tone(buzzer2,500,500);
          goto intrusos;          
        }
      }
    }
  }
} 


//---Estado Fuego---
void estadoFuego (){
  fuego: //etiqueta para goto
  cerradura.write(abierta);
  sonidoFuego()
  serial.print(1);
  tempPass = "";
  lcd.clear();
  i = 6;
  while(!passVerificada){
  lcd.setCursor(0,0);
  lcd.print("¡Alerta Fuego!");
  lcd.setCursor(0,1);
  lcd.print("PASS>>");
  teclaPresionada = teclado.getKey(); //va a leer las teclas que se precionen
    if(teclaPresionada != NO_KEY){ //para que no guarde espacios en blanco mentras no se precionan teclas
      if(teclaPresionada==0 || teclaPresionada==1 || teclaPresionada==2 || teclaPresionada==3 || teclaPresionada==4 ||
         teclaPresionada==5 || teclaPresionada==6 || teclaPresionada==7 || teclaPresionada==8 || teclaPresionada==9 )
      {
        //este ciclo tiene dos funciones "pedir" la password y poner * en lugar de los caracteres para mentener la password escondida 
       tempPass += teclaPresionada;
       lcd.setCursor(i,1);
       lcd.print("*");
       i++;
       tone(buzzer2,800,200);
      }
      else if(teclaPresionada == "#"){ //cancelar la opracion
        break;
      }
      else if(teclapresionada == "*"){//verificar la pasword
        if(password == tempPass){
          lcd.clear();
          lcd.setCursor(0,0);
          lcd.print("Sistema Desarmado");
          lcd.setCursor(0,1);
          lcd.print("----------------");
          tone(buzzer2,800,1000);
          //pasa a estado Desarme, falta esa bariable           
        }
        else{
          tempPass="";
          tone(buzzer2,500,500);
          goto fuego;          
        }
      }
    }
  }
} 



//-----------Funciones de Sonido-----------
//------------Sonido de Espera------------ 
unsigned long  SE_tiempoAnterior = 0;
void sonidoEspera(){
  unsigned long SE_tiempoActual = millis();
  if(SE_tiempoActual - SE_tiempoAnterior <= 100){
    tone(buzzer1, 1000);
  }
  else{
    noTone(buzzer1);
    if(SE_tiempoActual - SE_tiempoAnterior >= 200){
      SE_tiempoAnterior = SE_tiempoActual;
    }
  } 
}


//------------Sonido de Alarma de Intruso------------
unsigned long  SI_tiempoAnterior = 0;
void sonidoIntruso(){
  unsigned long SI_tiempoActual = millis();
  if(SI_tiempoActual - SI_tiempoAnterior <= 1000){
    tone(buzzer1, 800);
  }
  else{
    noTone(buzzer1);
    if(SI_tiempoActual - SI_tiempoAnterior >= 1300){
      SI_tiempoAnterior = SI_tiempoActual;
    }
  }
}


//------------Sonido de Alarma de Incendio------------
unsigned long  SF_tiempoAnterior = 0;
void sonidoFuego(){
  unsigned long SF_tiempoActual = millis();
  if(SF_tiempoActual - SF_tiempoAnterior <= 500){
    tone(buzzer1, 400);
  }
  else{
    if(SF_tiempoActual - SF_tiempoAnterior >= 500 && SF_tiempoActual - SF_tiempoAnterior <= 1000){
    tone(buzzer1, 800);
    }
    else{
      noTone(buzzer1);
      if(SF_tiempoActual - SF_tiempoAnterior > 1500){
         SF_tiempoAnterior = SF_tiempoActual;
      }    
    } 
  }
}
